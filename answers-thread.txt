当两个线程同时向哈希表中添加条目时，它们的总插入速率为每秒 43927 次。
这大约是运行 ph 1 的单线程速度的两倍。
约 2 倍的出色 "并行加速" 是我们所期望的
（即两倍的内核在单位时间内产生两倍的工作量）。

我们观察了一下`ph.c`中与插入相关的源码insert函数，
这段代码是多线程操作哈希表时出错的根源，
假设某个线程调用了 insert 但没有返回，
此时另一个线程调用 insert，
它们的第四个参数 n（bucket 的链表头）如果值相同，
就会发生漏插入键值对的现象。

简而言之，因为存在竞争条件，两个线程竞争共享内存映射。